export CASE_SENSITIVE="true"

# Kill autocorrect
unsetopt correct_all

# UNCOMMENT TO GET PROFILING
# zmodload zsh/zprof

# load profile from ~/.profile, since other shells will use that too
[[ -e $HOME/.profile ]] && emulate sh -c 'source $HOME/.profile'

# Grab some useful env variables i don't want in
# a repository
local_env_file=$DOTFILES_DIR/env.local
[[ -f $local_env_file ]] && source $local_env_file

# initiate zsh first
typeset -U zsh_dir
zsh_dir=$DOTFILES_DIR/zsh
source $zsh_dir/functions.zsh
source $zsh_dir/aliases.zsh

# now handle plugins
typeset -U zsh_config_files
zsh_config_files=($DOTFILES_DIR/**/init.zsh)
for file in ${zsh_config_files}
do
  source $file
done

# os specific config
if islinux; then
typeset -U os_config_files
  os_config_files=($DOTFILES_DIR/zsh/os/linux/**/*.zsh)
  for file in ${os_config_files}
  do
    source $file
  done
fi

if isdarwin; then
  typeset -U os_config_files
  os_config_files=($DOTFILES_DIR/zsh/os/mac/**/*.zsh)
  for file in ${os_config_files}
  do
    source $file
  done
fi

# machine specific config
machine_config="$zsh/machine/`hostname`.zsh"
if [ -f $machine_config ]; then
  source $machine_config
fi

if [ -d $HOME/projects ]; then
    export PROJECTS="$HOME/projects"
    export CDPATH=$PROJECTS:$HOME:$CDPATH
fi

###########################################
## completion stuff
## from: https://gist.github.com/ctechols/ca1035271ad134841284
###########################################

zstyle ':compinstall' filename '$HOME/.zshrc'

zcachedir="$HOME/.zcache"
[[ -d "$zcachedir" ]] || mkdir -p "$zcachedir"

_update_zcomp() {
    setopt local_options
    setopt extendedglob
    autoload -Uz compinit
    local zcompf="$1/zcompdump"
    # use a separate file to determine when to regenerate, as compinit doesn't
    # always need to modify the compdump
    local zcompf_a="${zcompf}.augur"

    if [[ -e "$zcompf_a" && -f "$zcompf_a"(#qN.md-1) ]]; then
        compinit -C -d "$zcompf"
    else
        compinit -d "$zcompf"
        touch "$zcompf_a"
    fi
    # if zcompdump exists (and is non-zero), and is older than the .zwc file,
    # then regenerate
    if [[ -s "$zcompf" && (! -s "${zcompf}.zwc" || "$zcompf" -nt "${zcompf}.zwc") ]]; then
        # since file is mapped, it might be mapped right now (current shells), so
        # rename it then make a new one
        [[ -e "$zcompf.zwc" ]] && mv -f "$zcompf.zwc" "$zcompf.zwc.old"
        # compile it mapped, so multiple shells can share it (total mem reduction)
        # run in background
        zcompile -M "$zcompf" &!
    fi
}
_update_zcomp "$zcachedir"
unfunction _update_zcomp

if [ -f ~/.dir_colors/dircolors ]
then
  eval `dircolors ~/.dir_colors/dircolors`
fi
source ~/.dotfiles/zsh/fleadope.zsh-theme
